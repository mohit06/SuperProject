apiVersion: apps/v1
kind: Deployment
metadata:
  # Unique key of the Deployment instance
  name: order-command-deployment
spec:
  # 3 Pods should exist at all times.
  replicas: 1
  selector:
    matchLabels:
      app: order-command-service
  template:
    metadata:
      labels:
        # Apply this label to pods and default
        # the Deployment label selector to this value
        app: order-command-service
    spec:
      containers:
      - name: order-command-service
        # Run this image
        image: mohitac036/order-command-service:11.0
        env:
        - name: DB_HOST
          value: mysql
        - name: DB_PORT
          value: "3306"
        - name: DB_NAME
          value: testDB
        - name: DB_USER
          value: root
        - name: DB_PASSWORD
          value: test1234
        - name: DB_DRIVER
          value: com.mysql.cj.jdbc.Driver
        - name: SPRING_PROFILES_ACTIVE
          value: dev
        - name: GENERATE_DDL
          value: "true"
        - name: DDL_AUTO
          value: update
        - name: SHOW_SQL
          value: "true"
        - name: KEY_SERIALIZER
          value: org.apache.kafka.common.serialization.StringSerializer
        - name: VALUE_SERIALIZER
          value: org.springframework.kafka.support.serializer.JsonSerializer
        - name: KAFKA_SERVER
          value: kafka-service:9092
---
kind: Service
apiVersion: v1
metadata:
  # Unique key of the Service instance
  name: order-command-service
spec:
  ports:
    # Accept traffic sent to port 10000
    - name: http
      port: 10000
      targetPort: 10000
      nodePort: 30007
  selector:
    # Loadbalance traffic across Pods matching
    # this label selector
    app: order-command-service
  # Create an HA proxy in the cloud provider
  # with an External IP address - *Only supported
  # by some cloud providers*
  type: NodePort
